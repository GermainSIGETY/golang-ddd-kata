definitions:
  ui.ErrorJsonResponse:
    properties:
      code:
        type: string
      field:
        type: string
      message:
        type: string
    type: object
  ui.ErrorsArrayJsonResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/ui.ErrorJsonResponse'
        type: array
    type: object
  ui.TodoCreationJSONRequest:
    properties:
      description:
        type: string
      dueDate:
        type: integer
      title:
        type: string
    required:
    - dueDate
    - title
    type: object
  ui.TodoCreationJSONResponse:
    properties:
      id:
        type: integer
    type: object
  ui.TodoListJSONResponse:
    properties:
      todos:
        items:
          $ref: '#/definitions/ui.TodoSummaryJSONResponse'
        type: array
    type: object
  ui.TodoReadJSONResponse:
    properties:
      creationDate:
        type: integer
      description:
        type: string
      dueDate:
        type: integer
      id:
        type: integer
      title:
        type: string
    type: object
  ui.TodoSummaryJSONResponse:
    properties:
      dueDate:
        type: integer
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost
info:
  contact:
    email: gsigety@gmail.com
  description: This is a golang project that serves as an example of hexagonal architecture
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Get Things Done Todos Rest API
  version: "1.0"
paths:
  /todos:
    get:
      description: Read all todos
      operationId: read-todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ui.TodoListJSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
      summary: Read todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo
      operationId: create-todo
      parameters:
      - description: todo infos
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ui.TodoCreationJSONRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ui.TodoCreationJSONResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
      summary: Create a todo
      tags:
      - todos
  /todos/{id}:
    delete:
      description: Delete a todo by its Id
      operationId: delete-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: it's ok
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
      summary: Delete a todo
      tags:
      - todos
    get:
      description: Read a todo by its Id
      operationId: read-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ui.TodoReadJSONResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
      summary: Read a todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a todo by its Id
      operationId: update-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: todo infos
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ui.TodoCreationJSONRequest'
      responses:
        "204":
          description: it's ok
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ui.ErrorsArrayJsonResponse'
      summary: Update a todo
      tags:
      - todos
swagger: "2.0"
